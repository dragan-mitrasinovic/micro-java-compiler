// generated with ast extension for cup
// version 0.8
// 9/0/2023 15:11:29


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(MethodDecl MethodDecl);
    public void visit(Mulop Mulop);
    public void visit(Relop Relop);
    public void visit(Assignop Assignop);
    public void visit(FirstDeclaredConstant FirstDeclaredConstant);
    public void visit(StatementList StatementList);
    public void visit(ClassName ClassName);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(VarList VarList);
    public void visit(ConstList ConstList);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(AssignmentStatement AssignmentStatement);
    public void visit(Condition Condition);
    public void visit(ActualParams ActualParams);
    public void visit(Methods Methods);
    public void visit(VarDeclList VarDeclList);
    public void visit(FormalParams FormalParams);
    public void visit(Expr Expr);
    public void visit(ArrayAssignmentList ArrayAssignmentList);
    public void visit(ActPars ActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(FormPars FormPars);
    public void visit(AssignopDerived1 AssignopDerived1);
    public void visit(RelopDerived6 RelopDerived6);
    public void visit(RelopDerived5 RelopDerived5);
    public void visit(RelopDerived4 RelopDerived4);
    public void visit(RelopDerived3 RelopDerived3);
    public void visit(RelopDerived2 RelopDerived2);
    public void visit(RelopDerived1 RelopDerived1);
    public void visit(AddopDerived2 AddopDerived2);
    public void visit(AddopDerived1 AddopDerived1);
    public void visit(MulopDerived3 MulopDerived3);
    public void visit(MulopDerived2 MulopDerived2);
    public void visit(MulopDerived1 MulopDerived1);
    public void visit(Array Array);
    public void visit(Variable Variable);
    public void visit(SubClass SubClass);
    public void visit(BaseClass BaseClass);
    public void visit(Label Label);
    public void visit(Type Type);
    public void visit(FirstDeclaredArray FirstDeclaredArray);
    public void visit(FirstDeclaredVariable FirstDeclaredVariable);
    public void visit(ArrDeclChain ArrDeclChain);
    public void visit(VarDeclChain VarDeclChain);
    public void visit(EmptyVarList EmptyVarList);
    public void visit(ErrorVarListComma ErrorVarListComma);
    public void visit(ErrorVarListSemi ErrorVarListSemi);
    public void visit(VarDeclA VarDeclA);
    public void visit(VarDeclV VarDeclV);
    public void visit(ErrorVarDeclComma ErrorVarDeclComma);
    public void visit(ErrorVarDeclSemi ErrorVarDeclSemi);
    public void visit(ConstantName ConstantName);
    public void visit(FirstDeclaredConstantChar FirstDeclaredConstantChar);
    public void visit(FirstDeclaredConstantBool FirstDeclaredConstantBool);
    public void visit(FirstDeclaredConstantNum FirstDeclaredConstantNum);
    public void visit(ConstDeclChar ConstDeclChar);
    public void visit(ConstDeclBool ConstDeclBool);
    public void visit(ConstDeclNum ConstDeclNum);
    public void visit(EmptyConstList EmptyConstList);
    public void visit(ConstDecl ConstDecl);
    public void visit(ArrayElementDesignator ArrayElementDesignator);
    public void visit(FieldDesignator FieldDesignator);
    public void visit(SingleDesignator SingleDesignator);
    public void visit(ExpressionFactor ExpressionFactor);
    public void visit(NewObjectFactor NewObjectFactor);
    public void visit(NewArrayFactor NewArrayFactor);
    public void visit(CharConstFactor CharConstFactor);
    public void visit(BoolConstFactor BoolConstFactor);
    public void visit(NumConstFactor NumConstFactor);
    public void visit(FunctionFactor FunctionFactor);
    public void visit(VariableFactor VariableFactor);
    public void visit(MulTerm MulTerm);
    public void visit(SingleTerm SingleTerm);
    public void visit(AddExpression AddExpression);
    public void visit(SingleNegatedExpression SingleNegatedExpression);
    public void visit(SingleExpression SingleExpression);
    public void visit(RelopCondFact RelopCondFact);
    public void visit(SingleCondFact SingleCondFact);
    public void visit(AndCondTerm AndCondTerm);
    public void visit(SingleCondTerm SingleCondTerm);
    public void visit(OrCond OrCond);
    public void visit(SingleCond SingleCond);
    public void visit(MultipleActualParam MultipleActualParam);
    public void visit(SingleActualParam SingleActualParam);
    public void visit(EmptyActualParamList EmptyActualParamList);
    public void visit(ActualParamaters ActualParamaters);
    public void visit(EmptyArrayAssignment EmptyArrayAssignment);
    public void visit(ArrayAssignmentAdd ArrayAssignmentAdd);
    public void visit(ArrayAssignmentSkip ArrayAssignmentSkip);
    public void visit(ErrorAssignment ErrorAssignment);
    public void visit(ValidAssignmentStatement ValidAssignmentStatement);
    public void visit(ArrayAssignmentNoFirst ArrayAssignmentNoFirst);
    public void visit(ArrayAssignment ArrayAssignment);
    public void visit(Postdecrement Postdecrement);
    public void visit(Postincrement Postincrement);
    public void visit(FunctionAssignment FunctionAssignment);
    public void visit(ValueAssignment ValueAssignment);
    public void visit(NestedStatement NestedStatement);
    public void visit(PrintMultipleStatement PrintMultipleStatement);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnVoidStatement ReturnVoidStatement);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(WhileStatement WhileStatement);
    public void visit(IfElseStatement IfElseStatement);
    public void visit(IfStatement IfStatement);
    public void visit(Assignment Assignment);
    public void visit(EmptyStatementList EmptyStatementList);
    public void visit(Statements Statements);
    public void visit(MultipleFormalParamArr MultipleFormalParamArr);
    public void visit(MultipleFormalParamVar MultipleFormalParamVar);
    public void visit(SingleFormalParamArr SingleFormalParamArr);
    public void visit(SingleFormalParamVar SingleFormalParamVar);
    public void visit(EmptyFormalParamList EmptyFormalParamList);
    public void visit(FormalParamaters FormalParamaters);
    public void visit(VoidMethodName VoidMethodName);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(MethodDeclVoid MethodDeclVoid);
    public void visit(MethodDeclRet MethodDeclRet);
    public void visit(EmptyMethodDeclList EmptyMethodDeclList);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(EmptyVarDeclList EmptyVarDeclList);
    public void visit(VarDeclarationList VarDeclarationList);
    public void visit(EmptyMethods EmptyMethods);
    public void visit(MethodDefinitions MethodDefinitions);
    public void visit(ClassDecl ClassDecl);
    public void visit(EmptyDeclList EmptyDeclList);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
